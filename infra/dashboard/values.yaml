kubernetes-dashboard:
  app:
    ingress:
      enabled: false

  api:
    role: api
    containers:
      args: [--enable-skip-login]

  ## Optional Metrics Server sub-chart configuration
  ## Enable this if you don't already have metrics-server enabled on your cluster and
  ## want to use it with dashboard metrics-scraper
  ## refs:
  ##  - https://github.com/kubernetes-sigs/metrics-server
  ##  - https://github.com/kubernetes-sigs/metrics-server/tree/master/charts/metrics-server
  metrics-server:
    enabled: false

  ## Optional Cert Manager sub-chart configuration
  ## Enable this if you don't already have cert-manager enabled on your cluster.
  cert-manager:
    enabled: false
    installCRDs: false

  ## Optional Nginx Ingress sub-chart configuration
  ## Enable this if you don't already have nginx-ingress enabled on your cluster.
  nginx:
    enabled: false

  ## Extra configurations:
  ## - manifests
  ## - predefined roles
  ## - prometheus
  ## - etc...
  extras:
    # Extra Kubernetes manifests to be deployed
    # manifests:
    # - apiVersion: v1
    #   kind: ConfigMap
    #   metadata:
    #     name: additional-configmap
    #   data:
    #     mykey: myvalue
    manifests: []
    # Start in ReadOnly mode.
    # Specifies whether cluster-wide RBAC resources (ClusterRole, ClusterRolebinding) with read only permissions to all resources listed inside the cluster should be created
    # Only dashboard-related Secrets and ConfigMaps will still be available for writing.
    #
    # The basic idea of the clusterReadOnlyRole
    # is not to hide all the secrets and sensitive data but more
    # to avoid accidental changes in the cluster outside the standard CI/CD.
    #
    # It is NOT RECOMMENDED to use this version in production.
    # Instead, you should review the role and remove all potentially sensitive parts such as
    # access to persistentvolumes, pods/log etc.
    clusterReadOnlyRole: false
    # It is possible to add additional rules if read only role is enabled.
    # This can be useful, for example, to show CRD resources.
    clusterReadOnlyRoleAdditionalRules: []
    serviceMonitor:
      # Whether to create a Prometheus Operator service monitor.
      enabled: false
      # Here labels can be added to the serviceMonitor
      labels: {}
      # Here annotations can be added to the serviceMonitor
      annotations: {}
